<?php namespace ProcessWire;

/**
 * Admin Theme Tweaker
 * @author Chris Bennett
 * ProcessWire 3.x
 * Copyright (C) 2011 by Ryan Cramer
 * Licensed under GNU/GPL v2, see LICENSE.TXT
 * http://www.processwire.com
 * http://www.ryancramer.com
 */
 
class AdminThemeTweaker extends WireData implements Module {

	public static function getModuleInfo() {
		return array(
			'title' => 'Admin Theme Tweaker for Uikit',
			'version' => '1.0.4',
			'summary' => 'Easily tweak default Uikit Theme',
			'author' => 'Chris Bennett',
			'icon' => 'wrench',
			'autoload' => 'template=admin',
			'requires' => 'ProcessWire>=3.0.16, AdminThemeUikit'
		);
	}
	
	const MODULE_NAME = 'AdminThemeTweaker';
	const MODULE_DIR = '../../' . self::MODULE_NAME;

	public function init() {		
		$this->config->styles->add('/' . self::MODULE_NAME . '/' . self::MODULE_NAME . '.php');
		$this->config->scripts->add('/' . self::MODULE_NAME . '/colorpickerswitch.js');	
	}

	public function install() {
		
		// Create path and dir outside of site folder if none already exists to allow php to access variables and generate your custom CSS
		
		if (!is_dir(self::MODULE_DIR)) {
    	mkdir(self::MODULE_DIR, 0755, true);
		}
		
		// If MODULE_DIR exists, copy AdminThemeTweaker.php from assets folder of module to MODULE_DIR		
		if (is_dir(self::MODULE_DIR)) {
   		$this->files->copy(__DIR__ . "/assets", self::MODULE_DIR);
		} else {
			$this->session->message('Folder could not be correctly created, please create manually and set permissions to 0755');
		}
	
	}
	
	public function uninstall() {
		
		// Clean up after ourselves on uninstall. If MODULE_DIR exists, find and delete contents then remove folder.
		
		function rrmdir($dir) {
			if (is_dir($dir)) {
				$objects = scandir($dir);
				foreach ($objects as $object) {
					if ($object != "." && $object != "..") {
						if (filetype($dir."/".$object) == "dir") 
							 rrmdir($dir."/".$object); 
						else unlink   ($dir."/".$object);
					}
				}
				reset($objects);
				rmdir($dir);
				}
		 }
		rrmdir(self::MODULE_DIR);
  }
	
}


